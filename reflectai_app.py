import streamlit as st

from modules.kuramoto_sim import run as run_kuramoto
from modules.hebbian_learning import run as run_hebbian
from modules.xor_prediction import run as run_xor
from modules.kuramoto_hebbian_sim import run as run_kuramoto_hebbian
from modules.topo_protect import run as run_topo_protect
from modules.lorenz_sim import run as run_lorenz_sim
from modules.predict_lorenz import run as run_lorenz_pred
from modules.berry_curvature import run as run_berry
from modules.noise_robustness import run as run_noise
from modules.esn_prediction import run as run_esn
from modules.plasticity_dynamics import run as run_plasticity
from modules.fractal_dimension import run as run_fractal

st.set_page_config(page_title="ReflecAI - Szinkroniz√°ci√≥ √©s MI", layout="wide")
st.title("üåê ReflecAI - Szinkroniz√°ci√≥ √©s Mesters√©ges Intelligencia")
st.markdown("V√°lassz egy modult a bal oldali s√°vb√≥l a vizualiz√°ci√≥ ind√≠t√°s√°hoz.")

st.sidebar.title("üìÇ Modulv√°laszt√≥")
module_name = st.sidebar.radio("K√©rlek v√°lassz:", (
    "Kuramoto szinkroniz√°ci√≥",
    "Hebbian tanul√°s",
    "XOR predikci√≥",
    "Kuramoto‚ÄìHebbian h√°l√≥",
    "Topol√≥giai szinkroniz√°ci√≥",
    "Lorenz szimul√°ci√≥",
    "Lorenz predikci√≥",
    "Topol√≥giai v√©detts√©g (Chern-sz√°m)",
    "Topol√≥giai Chern‚Äìsz√°m anal√≠zis",
    "Zajt≈±r√©s √©s szinkroniz√°ci√≥s robusztuss√°g",
    "Echo State Network (ESN) predikci√≥",
    "Hebbian plaszticit√°s dinamik√°ja",
    "Szinkronfrakt√°l dimenzi√≥anal√≠zis"
))

# ‚úÖ M√ìDOS√çTOTT Kuramoto blokk bemeneti vez√©rl√©ssel
if module_name == "Kuramoto szinkroniz√°ci√≥":
    n = st.sidebar.slider("üß† Oszcill√°torok sz√°ma", min_value=2, max_value=100, value=10)
    coupling = st.sidebar.slider("üîó Kapcsol√°si er≈ëss√©g", min_value=0.0, max_value=5.0, value=1.0, step=0.1)
    duration = st.sidebar.slider("‚è±Ô∏è Szimul√°ci√≥ hossza (s)", min_value=1, max_value=60, value=10)

    run_kuramoto(n_oscillators=n, coupling_strength=coupling, sim_time=duration)

elif module_name == "Hebbian tanul√°s":
    run_hebbian()
elif module_name == "XOR predikci√≥":
    run_xor()
elif module_name == "Kuramoto‚ÄìHebbian h√°l√≥":
    run_kuramoto_hebbian()
elif module_name == "Topol√≥giai szinkroniz√°ci√≥":
    run_topo_protect()
elif module_name == "Lorenz szimul√°ci√≥":
    run_lorenz_sim()
elif module_name == "Lorenz predikci√≥":
    run_lorenz_pred()
elif module_name == "Topol√≥giai v√©detts√©g (Chern-sz√°m)":
    run_berry()
elif module_name == "Topol√≥giai Chern‚Äìsz√°m anal√≠zis":
    run_berry()
elif module_name == "Zajt≈±r√©s √©s szinkroniz√°ci√≥s robusztuss√°g":
    run_noise()
elif module_name == "Echo State Network (ESN) predikci√≥":
    run_esn()
elif module_name == "Hebbian plaszticit√°s dinamik√°ja":
    run_plasticity()
elif module_name == "Szinkronfrakt√°l dimenzi√≥anal√≠zis":
    run_fractal()
