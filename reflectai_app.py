import streamlit as st
import yaml
from yaml.loader import SafeLoader
import streamlit_authenticator as stauth

from modules.modules_registry import MODULES, safe_run
from utils.metadata_loader import load_metadata

# Oldalbe√°ll√≠t√°s
st.set_page_config(page_title="ReflectAI ‚Äì Scientific Sandbox", layout="wide")

# --- Konfigur√°ci√≥ bet√∂lt√©se ---
with open('config.yaml') as file:
    config = yaml.load(file, Loader=SafeLoader)

# --- Autentik√°ci√≥ be√°ll√≠t√°sa ---
authenticator = stauth.Authenticate(
    credentials=config['credentials'],
    cookie_name=config['cookie']['name'],
    key=config['cookie']['key'],
    expiry_days=config['cookie']['expiry_days'],
    preauthorized=config.get('preauthorized', {})
)

# --- Bejelentkez√©s ---
name, authentication_status, username = authenticator.login('Bejelentkez√©s', location='main')

# --- Hiteles√≠t√©si √°llapot kezel√©se ---
if authentication_status is False:
    st.error("‚ùå Hib√°s felhaszn√°l√≥n√©v vagy jelsz√≥.")
elif authentication_status is None:
    st.warning("‚ö†Ô∏è K√©rlek jelentkezz be.")
elif authentication_status:
    authenticator.logout("Kijelentkez√©s", location='sidebar')
    st.sidebar.success(f"‚úÖ Bejelentkezve mint: {name} ({username})")

    # F≈ëc√≠m
    st.title("üß† ReflectAI ‚Äì Scientific Playground")

    # Modulv√°laszt√≥
    st.sidebar.title("üóÇÔ∏è Modulv√°laszt√≥")
    selected_module = st.sidebar.radio("V√°lassz modult:", list(MODULES.keys()))

    # Metaadat bet√∂lt√©s √©s megjelen√≠t√©s
    metadata_key = selected_module.replace(" ", "_").lower()
    metadata = load_metadata(metadata_key)

    st.subheader(f"üìò {metadata.get('title', selected_module)}")
    st.write(metadata.get("description", ""))
