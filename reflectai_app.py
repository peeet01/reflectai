import streamlit as st 
import yaml
import streamlit_authenticator as stauth 
import os 
import pandas as pd 
import seaborn as sns 
import matplotlib.pyplot as plt 
import logging

from modules.hebbian_learning import run_hebbian_learning from modules.kohonen_som import run_kohonen_som from modules.reflection_module import run_reflection_module from modules.context_modeling import run_context_model

Napl√≥z√°s be√°ll√≠t√°sa

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s') logger = logging.getLogger(name)

Hiteles√≠t√©si konfigur√°ci√≥ bet√∂lt√©se

with open("config.yaml") as file: config = yaml.safe_load(file)

authenticator = stauth.Authenticate( config['credentials'], config['cookie']['name'], config['cookie']['key'], config['cookie']['expiry_days'] )

Bel√©ptet√©s

name, authentication_status, username = authenticator.login("Bejelentkez√©s", "main")

if authentication_status is False: st.error("‚ùå Hib√°s felhaszn√°l√≥n√©v vagy jelsz√≥.") elif authentication_status is None: st.warning("‚ö†Ô∏è K√©rlek add meg a bejelentkez√©si adatokat.") elif authentication_status: authenticator.logout("Kijelentkez√©s", "sidebar") st.sidebar.title(f"üöÄ √údv, {name}!")

st.title("ReflectAI - Modul√°ris tanul√°si rendszer")

# Modul v√°laszt√°s
modul_valasztas = st.sidebar.selectbox(
    "V√°lassz modult:",
    (
        "Hebbian tanul√°s",
        "Kohonen SOM",
        "Reflexi√≥s modul",
        "Kontextus modell"
    )
)

try:
    if modul_valasztas == "Hebbian tanul√°s":
        run_hebbian_learning()
    elif modul_valasztas == "Kohonen SOM":
        run_kohonen_som()
    elif modul_valasztas == "Reflexi√≥s modul":
        run_reflection_module()
    elif modul_valasztas == "Kontextus modell":
        run_context_model()
    else:
        st.warning("‚ö†Ô∏è V√°lassz modult a bal oldali men√ºben.")
except Exception as e:
    st.error(f"Hiba t√∂rt√©nt a modul futtat√°sa k√∂zben: {e}")
    logger.exception("Modulhiba")

else: st.warning("Bejelentkez√©s sz√ºks√©ges a folytat√°shoz.")

