import streamlit as st
from modules.kuramoto_sim import run as run_kuramoto
from modules.kuramoto_hebbian_sim import run as run_kuramoto_hebbian
from modules.hebbian_learning import run as run_hebbian
from modules.graph_sync_analysis import run as run_graph_sync
from modules.xor_prediction import run as run_xor
from modules.lorenz_sim import run as run_lorenz
from modules.predict_lorenz import run as run_lorenz_pred

st.set_page_config(page_title="ReflectAI", page_icon="üß†")
st.title("üß† ReflectAI ‚Äì Tudom√°nyos MI szimul√°ci√≥k")

st.sidebar.title("üìÇ Modulv√°laszt√≥")
page = st.sidebar.radio("V√°lassz szimul√°ci√≥s modult:", [
    "Kuramoto szinkroniz√°ci√≥",
    "Hebbian tanul√°s",
    "XOR predikci√≥",
    "Kuramoto-Hebbian adapt√≠v h√°l√≥",
    "Topol√≥gia + zaj hat√°s",
    "Lorenz attraktor",
    "Lorenz predikci√≥"
])

# K√©rd√©smez≈ë glob√°lisan
st.subheader("‚ùì Tedd fel k√©rd√©sed a modellekhez")
question = st.text_input("√çrd be a k√©rd√©sed:")

if question:
    st.info("Ez a mez≈ë egyel≈ëre csak kijelz√©sre szolg√°l. AI v√°laszmodul k√©s≈ëbb aktiv√°lhat√≥.")
    st.write("K√©rd√©s:", question)

# Modulok futtat√°sa
if page == "Kuramoto szinkroniz√°ci√≥":
    run_kuramoto()
elif page == "Hebbian tanul√°s":
    run_hebbian()
elif page == "XOR predikci√≥":
    run_xor()
elif page == "Kuramoto-Hebbian adapt√≠v h√°l√≥":
    run_kuramoto_hebbian()
elif page == "Topol√≥gia + zaj hat√°s":
    run_graph_sync()
elif page == "Lorenz attraktor":
    run_lorenz()
elif page == "Lorenz predikci√≥":
    run_lorenz_pred()
