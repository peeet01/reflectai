import streamlit as st
import yaml
from yaml.loader import SafeLoader
import streamlit_authenticator as stauth
from modules.journal import journal_module
from modules.reflection_template import reflection_template_module
from utils.metadata_loader import load_metadata  # helyes el√©r√©si √∫t

# üîê Hiteles√≠t√©si konfigur√°ci√≥ bet√∂lt√©se
with open("config.yaml") as file:
    config = yaml.load(file, Loader=SafeLoader)

authenticator = stauth.Authenticate(
    credentials=config['credentials'],
    cookie_name=config['cookie']['name'],
    cookie_key=config['cookie']['key'],
    cookie_expiry_days=config['cookie']['expiry_days']
)

# üîê Bejelentkez√©s ‚Äì √∫j streamlit-authenticator API haszn√°lat√°val
name, authentication_status, username = authenticator.login()

if authentication_status is False:
    st.error("Hib√°s felhaszn√°l√≥n√©v vagy jelsz√≥.")
elif authentication_status is None:
    st.warning("K√©rlek add meg a bejelentkez√©si adataidat.")
elif authentication_status:
    authenticator.logout("Kijelentkez√©s", "sidebar")
    st.sidebar.success(f"Bejelentkezve mint {name}")

    # Oldalv√°laszt√≥
    st.sidebar.title("Navig√°ci√≥")
    page = st.sidebar.selectbox("V√°lassz oldalt", ["Kutat√°si napl√≥", "Reflexi√≥ sablon"])

    MODULES = {
        "Kutat√°si napl√≥": journal_module,
        "Reflexi√≥ sablon": reflection_template_module,
    }

    # Modul bet√∂lt√©se
    if page in MODULES:
        MODULES[page]()

    # Metaadatok (opcion√°lis)
    metadata = load_metadata(page)
    st.sidebar.markdown("---")
    st.sidebar.markdown(f"**Verzi√≥:** {metadata.get('version', 'ismeretlen')}")
    st.sidebar.markdown(f"**Fejleszt≈ë:** {metadata.get('author', 'ismeretlen')}")
