import streamlit as st

# Modulok import√°l√°sa
from modules.kuramoto_sim import run as run_kuramoto_lstm
from modules.hebbian_learning import run as run_hebbian_learning
from modules.xor_prediction import run as run_xor
from modules.kuramoto_hebbian_net import run as run_kuramoto_hebbian
from modules.graph_sync_analysis import run as run_topo_sync
from modules.lorenz_sim import run as run_lorenz_sim
from modules.predict_lorenz import run as run_lorenz_pred
from modules.topo_protect import run as run_topo_chern
from modules.berry_curvature import run as run_berry
from modules.noise_robustness import run as run_noise
from modules.esn_prediction import run as run_esn
from modules.plasticity_dynamics import run as run_plasticity
from modules.fractal_dimension import run as run_fractal_dimension  # √öJ MODUL ‚úÖ

# Oldals√°v ‚Äì Modulv√°laszt√≥
st.sidebar.title("üìÅ Modulv√°laszt√≥")

modulok = {
    "Kuramoto szinkroniz√°ci√≥": run_kuramoto_lstm,
    "Hebbian tanul√°s": run_hebbian_learning,
    "XOR predikci√≥": run_xor,
    "Kuramoto‚ÄìHebbian h√°l√≥": run_kuramoto_hebbian,
    "Topol√≥giai szinkroniz√°ci√≥": run_topo_sync,
    "Lorenz szimul√°ci√≥": run_lorenz_sim,
    "Lorenz predikci√≥": run_lorenz_pred,
    "Topol√≥giai v√©detts√©g (Chern-sz√°m)": run_topo_chern,
    "Topol√≥giai Chern‚Äìsz√°m anal√≠zis": run_berry,
    "Zaj≈±r√©s √©s szinkroniz√°ci√≥s robusztuss√°g": run_noise,
    "Echo State Network (ESN) predikci√≥": run_esn,
    "Plaszticit√°s szimul√°ci√≥": run_plasticity,
    "Frakt√°ldimenzi√≥ anal√≠zis": run_fractal_dimension  # √öJ MODUL ‚úÖ
}

modul_valasztas = st.sidebar.radio("V√°lassz modult:", list(modulok.keys()))

# Modul futtat√°sa
if modul_valasztas in modulok:
    modulok[modul_valasztas]()
else:
    st.warning("Nincs √©rv√©nyes modul kiv√°lasztva.")
