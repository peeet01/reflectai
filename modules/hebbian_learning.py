import numpy as np
import pandas as pd
import streamlit as st
import matplotlib.pyplot as plt
import plotly.graph_objects as go

def hebbian_learning(X, T, eta, epochs):
    weights = np.zeros(X.shape[1])
    history = []

    for _ in range(epochs):
        for x, t in zip(X, T):
            weights += eta * x * t
            history.append(weights.copy())

    return np.array(history)

def generate_inputs():
    X = np.array([[0, 0], [0, 1], [1, 0], [1, 1]])
    T = np.array([0, 0, 0, 1])  # AND logikai m≈±velet
    return X, T

def app():
    st.title("üß† Hebbian Learning Szimul√°ci√≥")
    st.markdown("Fedezd fel a Hebb-szab√°ly m≈±k√∂d√©s√©t egy egyszer≈± p√©ld√°n kereszt√ºl.")

    eta = st.slider("Tanul√°si r√°ta (Œ∑)", 0.01, 1.0, 0.1, step=0.01)
    epochs = st.slider("Epoch-ok sz√°ma", 1, 100, 20)

    X, T = generate_inputs()
    history = hebbian_learning(X, T, eta, epochs)

    # 2D vizualiz√°ci√≥
    st.subheader("üìà S√∫lyv√°ltoz√°sok 2D-ben")
    fig, ax = plt.subplots()
    ax.plot(history[:, 0], label="w‚ÇÄ")
    ax.plot(history[:, 1], label="w‚ÇÅ")
    ax.set_xlabel("Iter√°ci√≥")
    ax.set_ylabel("S√∫ly √©rt√©k")
    ax.set_title("Hebbian s√∫lytanul√°s")
    ax.legend()
    st.pyplot(fig)

    # 3D vizualiz√°ci√≥
    st.subheader("üìä S√∫lyp√°lya vizualiz√°ci√≥ 3D-ben")
    fig3d = go.Figure(data=[go.Scatter3d(
        x=history[:, 0],
        y=history[:, 1],
        z=np.arange(len(history)),
        mode='lines+markers',
        marker=dict(size=4),
        line=dict(width=2)
    )])
    fig3d.update_layout(scene=dict(
        xaxis_title="w‚ÇÄ",
        yaxis_title="w‚ÇÅ",
        zaxis_title="Iter√°ci√≥"
    ), margin=dict(l=0, r=0, b=0, t=30), height=500)
    st.plotly_chart(fig3d)

    # CSV export
    st.subheader("üì• Export")
    df = pd.DataFrame(history, columns=["w‚ÇÄ", "w‚ÇÅ"])
    csv = df.to_csv(index_label="iter√°ci√≥").encode("utf-8")
    st.download_button("S√∫lyok let√∂lt√©se CSV-ben", data=csv, file_name="hebb_weights.csv")

    # Tudom√°nyos magyar√°zat
    st.markdown("### üìö Tudom√°nyos h√°tt√©r")
    st.markdown("""
A Hebbian-tanul√°s az egyik legegyszer≈±bb √©s legismertebb biol√≥giai ihlet√©s≈± tanul√°si szab√°ly, amely a szinaptikus kapcsolatok er≈ës√∂d√©s√©t modellezi.

**Alapgondolat:** "Azok a neuronok, amelyek egy√ºtt t√ºzelnek, egy√ºtt huzaloz√≥dnak."

**S√∫lyfriss√≠t√©si szab√°ly (egyszer≈±s√≠tett alakban):**

    w_i ‚Üê w_i + Œ∑ ¬∑ x_i ¬∑ t

ahol:

- `w_i` az i-edik bemenethez tartoz√≥ s√∫ly,
- `Œ∑` a tanul√°si r√°ta (egy kis pozit√≠v sz√°m),
- `x_i` a bemenet aktu√°lis √©rt√©ke,
- `t` a c√©l√©rt√©k vagy a posztszinaptikus neuron aktivit√°sa.

Ez a szab√°ly meger≈ës√≠ti azokat a kapcsolatokat, amelyekn√©l a bemenet √©s a kimenet **egyszerre akt√≠v**.  
A Hebbian-tanul√°s nem ig√©nyel hibavisszacsatol√°st (mint p√©ld√°ul a visszaterjeszt√©s), √©s ide√°lis a **nem fel√ºgyelt tanul√°s** egyszer≈± modelljeihez.

Biol√≥giai megfelel≈ëje megfigyelhet≈ë p√©ld√°ul az agyk√©reg szinaptikus plaszticit√°s√°ban.
    """)

# Figyelem: NEVE maradjon app()
