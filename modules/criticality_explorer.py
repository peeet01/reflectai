
import streamlit as st import numpy as np import matplotlib.pyplot as plt import seaborn as sns

def generate_lattice(N): return np.zeros((N, N), dtype=int)

def drop_grain(grid, threshold=4): N = grid.shape[0] avalanche_sizes = []

i, j = np.random.randint(0, N), np.random.randint(0, N)
grid[i, j] += 1
avalanche = 0

unstable = True
while unstable:
    unstable = False
    to_topple = np.argwhere(grid >= threshold)
    for x, y in to_topple:
        grid[x, y] -= 4
        avalanche += 1
        for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:
            nx, ny = x + dx, y + dy
            if 0 <= nx < N and 0 <= ny < N:
                grid[nx, ny] += 1
        unstable = True

avalanche_sizes.append(avalanche)
return avalanche_sizes

def simulate_avalanche(N, steps): grid = generate_lattice(N) all_sizes = [] for _ in range(steps): sizes = drop_grain(grid) all_sizes.extend(sizes) return all_sizes

def run(): st.title("ðŸŒ‹ Criticality Explorer â€“ Ã–nszervezÅ‘dÅ‘ KritikalitÃ¡s") st.markdown(""" Ez a modul az Ã¶nszervezÅ‘dÅ‘ kritikalitÃ¡s (SOC) jelensÃ©gÃ©t modellezi Ã©s szemlÃ©lteti egy egyszerÅ± homokdombmodell (Bak-Tang-Wiesenfeld) segÃ­tsÃ©gÃ©vel.

**A cÃ©l:** megfigyelni, hogyan vezet egy egyszerÅ± szabÃ¡ly a rendezetlensÃ©g Ã©s a rendezettsÃ©g hatÃ¡rÃ¡n lÃ©vÅ‘ kritikus viselkedÃ©shez.
""")

N = st.slider("RÃ¡cs mÃ©rete (N x N)", 10, 100, 25)
steps = st.slider("SzimulÃ¡ciÃ³ lÃ©pÃ©sek szÃ¡ma", 100, 5000, 1000, step=100)

if st.button("SzimulÃ¡ciÃ³ futtatÃ¡sa"):
    with st.spinner("SzimulÃ¡ciÃ³ folyamatban..."):
        sizes = simulate_avalanche(N, steps)

    st.subheader("ðŸ“‰ LavinamÃ©ret-eloszlÃ¡s (log-log)")
    fig, ax = plt.subplots()
    counts, bins = np.histogram(sizes, bins=50)
    bins_center = (bins[:-1] + bins[1:]) / 2
    ax.loglog(bins_center, counts, marker='o', linestyle='none')
    ax.set_xlabel("LavinamÃ©ret")
    ax.set_ylabel("GyakorisÃ¡g")
    ax.set_title("SkÃ¡lafÃ¼ggetlen eloszlÃ¡s â€“ LavinamÃ©retek")
    st.pyplot(fig)

    st.subheader("ðŸ§  TudomÃ¡nyos hÃ¡ttÃ©r")
    st.markdown("""
    Az Ã¶nszervezÅ‘dÅ‘ kritikalitÃ¡s (SOC) olyan rendszerek jellemzÅ‘je, amelyek spontÃ¡n kritikus Ã¡llapotba kerÃ¼lnek anÃ©lkÃ¼l, hogy kÃ¼lsÅ‘ paramÃ©terhangolÃ¡s szÃ¼ksÃ©ges lenne.

    A modell alapkÃ©plete:

P(s) \propto s^{-\tau}

ahol $s$ a lavinamÃ©ret Ã©s $\tau$ egy jellemzÅ‘ kitevÅ‘ (tipikusan 1.5â€“2.0).

    **KÃ¶vetkeztetÃ©sek:**
    - A hÃ¡lÃ³zat folyamatosan a rendezettsÃ©g Ã©s kÃ¡osz hatÃ¡rÃ¡n mÅ±kÃ¶dik.
    - A tanulÃ¡si Ã©s feldolgozÃ¡si kÃ©pessÃ©gek maximÃ¡lisak lehetnek ebben az Ã¡llapotban.
    - Hasznos neuromorf szÃ¡mÃ­tÃ¡stechnikÃ¡ban Ã©s agykutatÃ¡sban.
    """)

    st.success("SzimulÃ¡ciÃ³ befejezve!")

app = run

