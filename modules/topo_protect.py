import numpy as np
import matplotlib.pyplot as plt
import networkx as nx
import streamlit as st


def kuramoto_dynamics(G, K, T, dt=0.05):
    N = len(G)
    A = nx.to_numpy_array(G)
    theta = np.random.uniform(0, 2*np.pi, N)
    omega = np.random.normal(0, 1, N)
    sync_history = []

    for _ in range(T):
        theta_matrix = np.subtract.outer(theta, theta)
        coupling = np.sum(A * np.sin(theta_matrix), axis=1)
        theta += (omega + (K / N) * coupling) * dt

        r = np.abs(np.sum(np.exp(1j * theta)) / N)
        sync_history.append(r)

    return theta, sync_history


def plot_network(G, theta, title):
    pos = nx.spring_layout(G, seed=42)
    colors = np.angle(np.exp(1j * theta))
    nx.draw(G, pos, node_color=colors, cmap='hsv', node_size=200, with_labels=False)
    plt.title(title)


def run():
    st.subheader("üß≠ Topol√≥giai szinkroniz√°ci√≥ ‚Äì h√°l√≥zat alap√∫ Kuramoto szimul√°ci√≥")

    # Be√°ll√≠t√°sok
    N = st.slider("üî¢ Cs√∫csok sz√°ma", 10, 100, 30)
    K = st.slider("üì° Kapcsol√°si er≈ëss√©g (K)", 0.0, 10.0, 2.0)
    T = st.slider("‚è±Ô∏è Iter√°ci√≥k sz√°ma", 10, 500, 200)
    topo = st.selectbox("üåê H√°l√≥zati topol√≥gia", ["r√°cs", "kis-vil√°g", "sk√°laf√ºggetlen"])

    # H√°l√≥zat l√©trehoz√°sa
    if topo == "r√°cs":
        side = int(np.sqrt(N))
        G = nx.grid_2d_graph(side, side)
        G = nx.convert_node_labels_to_integers(G)
    elif topo == "kis-vil√°g":
        G = nx.watts_strogatz_graph(N, k=4, p=0.3)
    elif topo == "sk√°laf√ºggetlen":
        G = nx.barabasi_albert_graph(N, m=2)

    # Kuramoto futtat√°s
    final_theta, sync_history = kuramoto_dynamics(G, K, T)

    # Vizualiz√°ci√≥
    col1, col2 = st.columns(2)
    with col1:
        fig1 = plt.figure()
        plot_network(G, np.random.uniform(0, 2*np.pi, N), "Kezdeti √°llapot")
        st.pyplot(fig1)

    with col2:
        fig2 = plt.figure()
        plot_network(G, final_theta, "V√©gs≈ë √°llapot")
        st.pyplot(fig2)

    # Szinkroniz√°ci√≥s index
    st.line_chart(sync_history)
    st.success(f"üìä V√©gs≈ë szinkroniz√°ci√≥s index: r = {sync_history[-1]:.2f}")
    st.info("A k√ºl√∂nb√∂z≈ë topol√≥gi√°k elt√©r≈ë m√©rt√©k≈± szinkroniz√°ci√≥t eredm√©nyezhetnek. A kis-vil√°g h√°l√≥k gyakran hat√©konyabbak.")
