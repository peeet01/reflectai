"""
Fractal Dimension Analysis Module
---------------------------------
Ez a modul a frakt√°l dimenzi√≥ becsl√©s√©t val√≥s√≠tja meg bin√°ris k√©padatok alapj√°n,
box-counting (dobozsz√°ml√°l√°sos) m√≥dszerrel.

A frakt√°l dimenzi√≥ m√©rt√©ke megmutatja, hogy egy adott geometriai objektum (pl. agyi aktivit√°smint√°zat)
milyen komplexit√°ssal t√∂lti ki a teret. K√ºl√∂n√∂sen hasznos agyi k√©palkot√°sban, EEG/MEG jelek elemz√©s√©ben
√©s neur√°lis strukt√∫r√°k vizsg√°lat√°ban.

üìö Tudom√°nyos h√°tt√©r:
- Falconer, K. (2003). *Fractal geometry: Mathematical foundations and applications.*
- Esteban, F. J., et al. (2009). *Fractal dimension and white matter changes in Alzheimer‚Äôs disease*. NeuroImage.

Author: ReflectAI
"""

import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
from PIL import Image
from skimage.color import rgb2gray
from skimage.filters import threshold_otsu
from skimage.transform import resize
import io

def boxcount(Z, k):
    """Kisz√°m√≠tja, h√°ny doboz sz√ºks√©ges az objektum lefed√©s√©re adott k m√©ret mellett."""
    S = np.add.reduceat(
        np.add.reduceat(Z, np.arange(0, Z.shape[0], k), axis=0),
        np.arange(0, Z.shape[1], k), axis=1)
    return len(np.where(S > 0)[0])

def fractal_dimension(Z, threshold=0.9):
    """Frakt√°l dimenzi√≥ becsl√©se dobozsz√°ml√°l√°sos m√≥dszerrel."""
    assert len(Z.shape) == 2, "K√©pnek k√©tdimenzi√≥snak kell lennie"
    Z = Z < threshold  # binariz√°l√°s
    p = min(Z.shape)
    n = 2**np.floor(np.log2(p))  # legnagyobb 2 hatv√°ny, ami belef√©r
    sizes = 2**np.arange(int(np.log2(n)), 1, -1)
    counts = [boxcount(Z, size) for size in sizes]
    coeffs = np.polyfit(np.log(sizes), np.log(counts), 1)
    return -coeffs[0]

def app():
    st.title("üßÆ Fractal Dimension Analyzer")

    st.markdown("""
    Ez a modul a k√©pi frakt√°l dimenzi√≥ becsl√©s√©re szolg√°l.  
    A m√≥dszer a **box-counting** elj√°r√°son alapul.

    > *A frakt√°l dimenzi√≥ egy nem eg√©sz sz√°m√∫ dimenzi√≥, amely azt √≠rja le,  
    hogy egy objektum mennyire t√∂lti ki a teret k√ºl√∂nb√∂z≈ë sk√°l√°kon.*
    """)

    uploaded_file = st.file_uploader("üì§ T√∂lts fel k√©pet (pl. neuronrajz, agyi minta)...", type=["png", "jpg", "jpeg"])
    if uploaded_file:
        image = Image.open(uploaded_file).convert("L")
        img_arr = np.array(image)
        thresh = threshold_otsu(img_arr)
        binary = img_arr > thresh
        fd = fractal_dimension(binary)

        st.image(image, caption="üì∑ Eredeti k√©p", use_column_width=True)
        st.subheader(f"üß† Becs√ºlt frakt√°l dimenzi√≥: `{fd:.4f}`")

        fig, ax = plt.subplots()
        ax.imshow(binary, cmap='gray')
        ax.set_title("üß© Binariz√°lt k√©p (k√ºsz√∂b: Otsu)")
        ax.axis('off')
        st.pyplot(fig)

    with st.expander("üìò Tudom√°nyos h√°tt√©r"):
        st.markdown("""
        A **frakt√°l dimenzi√≥** (D) egy m√©r≈ësz√°m, amely megmutatja, hogy egy objektum  
        hogyan v√°ltozik a r√©szletgazdags√°ga k√ºl√∂nb√∂z≈ë nagy√≠t√°si szinteken.

        A **box-counting dimenzi√≥** formul√°ja:
        $$
        D = \\lim_{\\varepsilon \\to 0} \\frac{\\log N(\\varepsilon)}{\\log(1/\\varepsilon)}
        $$

        Ahol:
        - $N(\\varepsilon)$ a sz√ºks√©ges dobozok sz√°ma, amelyek lefedik az objektumot,
        - $\\varepsilon$ a doboz m√©rete.

        **Alkalmaz√°sai:**
        - agyi EEG mint√°zatok komplexit√°s√°nak elemz√©se,
        - morfol√≥giai vizsg√°latok (pl. neuronform√°k),
        - Alzheimer- √©s Parkinson-k√≥r struktur√°lis biomarkerei.
        """)

# K√∂telez≈ë ReflectAI-kompatibilit√°s
app = app
