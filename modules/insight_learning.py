import streamlit as st import numpy as np import matplotlib.pyplot as plt import time import random

def run(trials=5, pause_time=1.0, complexity="kozepes"): st.write("### üß† Bel√°t√°s alap√∫ tanul√°s ‚Äì Szimul√°ci√≥")

# Komplexit√°s szintjeihez param√©terek
if complexity == "alacsony":
    n_elements = 3
elif complexity == "magas":
    n_elements = 7
else:
    n_elements = 5

fig, ax = plt.subplots()
progress_bar = st.progress(0)
log_area = st.empty()

success_found = False
insight_trial = random.randint(2, trials)  # bel√°t√°s v√°rhat√≥an itt k√∂vetkezik be
solution_path = np.sort(np.random.permutation(range(1, 10))[:n_elements])

log = ""
for t in range(1, trials + 1):
    progress_bar.progress(t / trials)

    ax.clear()
    attempt = np.sort(np.random.permutation(range(1, 10))[:n_elements])
    ax.bar(range(n_elements), attempt)
    ax.set_title(f"{t}. pr√≥b√°lkoz√°s ‚Äì Elemkombin√°ci√≥")
    st.pyplot(fig)

    if np.array_equal(attempt, solution_path) and t >= insight_trial:
        log += f"\n‚úÖ {t}. pr√≥b√°lkoz√°s: Sikeres bel√°t√°s! Megfejtett strukt√∫ra: {attempt}"
        success_found = True
        break
    else:
        log += f"\n‚ùå {t}. pr√≥b√°lkoz√°s: Nem siker√ºlt. Pr√≥b√°lkozott: {attempt}"
        time.sleep(pause_time)
    log_area.code(log)

if not success_found:
    log += f"\n‚ö†Ô∏è {trials}. pr√≥b√°lkoz√°s ut√°n sem t√∂rt√©nt √°tt√∂r√©s."
    log_area.code(log)
else:
    st.balloons()
    st.success("Bel√°t√°s megt√∂rt√©nt!")

st.markdown("---")
st.markdown("#### üîé Megjegyz√©s")
st.info("A bel√°t√°s szimul√°ci√≥ja sor√°n egy rejtett mint√°zatot pr√≥b√°l meg felfedezni a modell pr√≥b√°lkoz√°sok sorozat√°val. A 'megold√°s' akkor √©rkezik meg, ha egy bels≈ë √°tt√∂r√©s t√∂rt√©nik ‚Äì ez itt egy v√©letlenszer≈± k√≠s√©rlet, ami az el≈ëre defini√°lt mint√°ra illeszkedik.")

