
import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

def run():
    st.subheader("üîÑ Plaszticit√°si dinamika szimul√°ci√≥")
    st.write("Hebbian elv≈± s√∫lyv√°ltoz√°si dinamika bemutat√°sa egy tanul√°si ciklusban.")

    st.markdown("**Param√©terek**:")
    epochs = st.slider("Epoch-ok sz√°ma", min_value=10, max_value=200, value=100, step=10)
    lr = st.slider("Tanul√°si r√°ta", min_value=0.001, max_value=0.1, value=0.01, step=0.001)
    noise_level = st.slider("Zaj m√©rt√©ke", min_value=0.0, max_value=1.0, value=0.2, step=0.05)

    # Szintetikus bemenetek √©s c√©lok
    X = np.random.randint(0, 2, (5, 10))  # 5 bemenet, 10 mint√°n
    Y = np.random.randint(0, 2, (3, 10))  # 3 kimenet, 10 mint√°n

    weight_history = []

    W = np.zeros((3, 5))  # 3 kimenet √ó 5 bemenet

    for epoch in range(epochs):
        noisy_X = X + noise_level * np.random.randn(*X.shape)
        W += lr * Y @ noisy_X.T
        weight_history.append(W.copy())

    # Vizualiz√°ci√≥
    final_weights = weight_history[-1]

    st.markdown("### üîç V√©gs≈ë s√∫lym√°trix")
    fig, ax = plt.subplots()
    sns.heatmap(final_weights, annot=True, cmap='coolwarm', ax=ax)
    st.pyplot(fig)

    # S√∫lyv√°ltoz√°si trend egy adott kapcsolat eset√©n
    w_trend = [W[0, 0] for W in weight_history]
    fig2, ax2 = plt.subplots()
    ax2.plot(w_trend)
    ax2.set_title("S√∫lyv√°ltoz√°s trend (Neuron 0 ‚Äì Bemenet 0)")
    ax2.set_xlabel("Epoch")
    ax2.set_ylabel("S√∫ly√©rt√©k")
    st.pyplot(fig2)

    st.success("Plaszticit√°s szimul√°ci√≥ sikeresen lefutott.")
