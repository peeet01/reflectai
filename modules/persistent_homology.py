import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import make_moons
from ripser import ripser
from persim import plot_diagrams

def run():
    st.header("ğŸ”· Perzisztens homolÃ³gia")
    st.write("VizualizÃ¡ciÃ³ Ripser Ã©s persim csomagokkal szintetikus adatokon.")

    dataset = st.selectbox("AdatkÃ©szlet", ["KÃ©t fÃ©lhold", "VÃ©letlen pontok", "KÃ¶rÃ¶k"])
    n_samples = st.slider("MintÃ¡k szÃ¡ma", 20, 1000, 300)

    if dataset == "KÃ©t fÃ©lhold":
        X, _ = make_moons(n_samples=n_samples, noise=0.05)
    elif dataset == "VÃ©letlen pontok":
        X = np.random.rand(n_samples, 2)
    elif dataset == "KÃ¶rÃ¶k":
        t = np.linspace(0, 2 * np.pi, n_samples)
        r = 1 + 0.1 * np.random.randn(n_samples)
        X = np.stack([r * np.cos(t), r * np.sin(t)], axis=1)

    st.subheader("ğŸ”˜ PontfelhÅ‘")
    fig1, ax1 = plt.subplots()
    ax1.scatter(X[:, 0], X[:, 1], s=10)
    ax1.set_aspect("equal")
    st.pyplot(fig1)

    st.subheader("ğŸ“Š Perzisztencia diagram")
    result = ripser(X)['dgms']
    fig2, ax2 = plt.subplots()
    plot_diagrams(result, ax=ax2)
    st.pyplot(fig2)

    st.info("A H0 komponensek a kapcsolÃ³dÃ³ klasztereket, a H1 komponensek a ciklusokat reprezentÃ¡ljÃ¡k.")
